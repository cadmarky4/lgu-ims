// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Base model for audit fields
model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  password    String
  firstName   String
  lastName    String
  middleName  String?
  role        UserRole @default(USER)
  isActive    Boolean  @default(true)
  isVerified  Boolean  @default(false)
  lastLoginAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations will be added when implementing specific modules
  refreshTokens RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  isRevoked Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  BARANGAY_CAPTAIN
  BARANGAY_SECRETARY
  BARANGAY_TREASURER
  KAGAWAD
  SK_CHAIRPERSON
  SK_KAGAWAD
  STAFF
  USER
}

// Base models for LGU Information Management System

// Residents Model
model Resident {
  id                        String   @id @default(cuid())
  firstName                 String
  lastName                  String
  middleName                String?
  suffix                    String?
  birthDate                 DateTime
  age                       Int
  gender                    Gender
  civilStatus               CivilStatus
  religion                  String?
  nationality               String   @default("Filipino")
  placeOfBirth              String?
  
  // Address Information
  houseNumber               String?
  street                    String?
  purok                     String?
  completeAddress           String
  
  // Contact Information
  mobileNumber              String?
  landlineNumber            String?
  emailAddress              String?
  
  // Family Information
  motherName                String?
  fatherName                String?
  emergencyContactName      String?
  emergencyContactNumber    String?
  
  // Government IDs
  primaryIdType             String?
  idNumber                  String?
  philsysNumber             String?
  tin                       String?
  
  // Special Classifications
  seniorCitizen             Boolean  @default(false)
  personWithDisability      Boolean  @default(false)
  soloParent                Boolean  @default(false)
  fourPsBeneficiary         Boolean  @default(false)
  indigent                  Boolean  @default(false)
  ofw                       Boolean  @default(false)
  
  // Household Information
  isHouseholdHead           Boolean  @default(false)
  householdId               String?
  household                 Household? @relation(fields: [householdId], references: [id])
  householdsAsHead          Household[] @relation("HouseholdHead")
  
  // Document Processing
  documents                 Document[]
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("residents")
}

// Households Model
model Household {
  id                        String   @id @default(cuid())
  householdType             String?
  barangay                  String
  streetSitio               String?
  houseNumber               String?
  completeAddress           String
  
  // Household Head
  headId                    String   @unique
  head                      Resident @relation("HouseholdHead", fields: [headId], references: [id])
  
  // Members
  members                   Resident[]
  totalMembers              Int      @default(0)
  
  // Economic Information
  monthlyIncome             Decimal?
  primaryIncomeSource       String?
  
  // House Information
  houseType                 HouseType?
  ownershipStatus           OwnershipStatus?
  
  // Benefits and Programs
  fourPsBeneficiary         Boolean  @default(false)
  indigentFamily            Boolean  @default(false)
  hasSeniorCitizen          Boolean  @default(false)
  hasPwdMember              Boolean  @default(false)
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("households")
}

// Documents Model
model Document {
  id                        String   @id @default(cuid())
  documentType              DocumentType
  documentNumber            String   @unique
  
  // Resident Information
  residentId                String
  resident                  Resident @relation(fields: [residentId], references: [id])
  
  // Document Details
  purposeOfRequest          String
  validIdPresented          String?
  yearsOfResidency          String?
  certifyingOfficial        String
  
  // Status and Processing
  status                    DocumentStatus @default(PENDING)
  applicationDate           DateTime @default(now())
  processedDate             DateTime?
  approvedDate              DateTime?
  rejectedDate              DateTime?
  rejectionReason           String?
  
  // Additional fields for specific document types
  businessName              String? // For business permits
  businessType              String?
  businessAddress           String?
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("documents")
}

// Projects and Programs Model
model Project {
  id                        String   @id @default(cuid())
  projectName               String
  category                  ProjectCategory
  projectDescription        String
  
  // Timeline
  startDate                 DateTime
  endDate                   DateTime
  
  // Status and Priority
  status                    ProjectStatus @default(PENDING)
  priorityLevel             PriorityLevel @default(MEDIUM)
  progress                  Int      @default(0)
  
  // Budget Information
  totalBudget               Decimal
  fundingSource             String
  materialSupplies          Decimal  @default(0)
  laborServices             Decimal  @default(0)
  equipment                 Decimal  @default(0)
  
  // Management
  projectManager            String
  expectedBeneficiaries     String?
  teamDepartment            String?
  keyStakeholders           String?
  projectLocation           String?
  
  // Success Metrics and Risks
  successMetrics            String?
  potentialRisks            String?
  
  // Related Models
  milestones                ProjectMilestone[]
  teamMembers               ProjectTeamMember[]
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("projects")
}

// Project Milestones Model
model ProjectMilestone {
  id                        String   @id @default(cuid())
  projectId                 String
  project                   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  description               String
  targetDate                DateTime
  completedDate             DateTime?
  status                    MilestoneStatus @default(PENDING)
  
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  @@map("project_milestones")
}

// Project Team Members Model (Many-to-Many relationship)
model ProjectTeamMember {
  id                        String   @id @default(cuid())
  projectId                 String
  project                   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  officialId                String
  official                  BarangayOfficial @relation(fields: [officialId], references: [id])
  
  role                      String?
  assignedDate              DateTime @default(now())
  
  @@unique([projectId, officialId])
  @@map("project_team_members")
}

// Barangay Officials Model
model BarangayOfficial {
  id                        String   @id @default(cuid())
  firstName                 String
  lastName                  String
  middleName                String?
  
  position                  OfficialPosition
  committee                 Committee?
  
  // Contact Information
  contact                   String?
  email                     String?
  
  // Term Information
  termStart                 DateTime
  termEnd                   DateTime
  status                    OfficialStatus @default(ACTIVE)
  
  // Personal Information
  nationality               String   @default("Filipino")
  photo                     String?
    // Relations
  projectTeamMembers        ProjectTeamMember[]
  appointments              Appointment[]
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("barangay_officials")
}

// Help Desk Models

// Complaints Model
model Complaint {
  id                        String   @id @default(cuid())
  complainantName           String
  complainantContact        String?
  complainantAddress        String?
  
  complaintType             ComplaintType
  subject                   String
  description               String
  
  // Status and Priority
  status                    ComplaintStatus @default(FILED)
  priority                  PriorityLevel @default(MEDIUM)
  
  // Processing Information
  assignedTo                String?
  assignedDate              DateTime?
  resolvedDate              DateTime?
  resolution                String?
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("complaints")
}

// Suggestions Model
model Suggestion {
  id                        String   @id @default(cuid())
  suggestorName             String
  suggestorContact          String?
  suggestorAddress          String?
  
  category                  SuggestionCategory
  title                     String
  description               String
  
  // Status and Processing
  status                    SuggestionStatus @default(SUBMITTED)
  
  // Review Information
  reviewedBy                String?
  reviewedDate              DateTime?
  reviewNotes               String?
  implementationStatus      ImplementationStatus?
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("suggestions")
}

// Blotter Cases Model
model BlotterCase {
  id                        String   @id @default(cuid())
  caseNumber                String   @unique
  
  // Complainant Information
  complainantName           String
  complainantAddress        String
  complainantContact        String?
  
  // Respondent Information
  respondentName            String
  respondentAddress         String?
  respondentContact         String?
  
  // Case Details
  incidentType              IncidentType
  incidentDate              DateTime
  incidentLocation          String
  narrative                 String
  
  // Status and Processing
  status                    BlotterStatus @default(FILED)
  
  // Mediation/Resolution
  mediationDate             DateTime?
  mediationResult           String?
  isResolved                Boolean  @default(false)
  resolutionDate            DateTime?
  resolution                String?
  
  // Officials involved
  receivingOfficer          String
  investigatingOfficer      String?
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("blotter_cases")
}

// Appointments Model
model Appointment {
  id                        String   @id @default(cuid())
  
  // Applicant Information
  applicantName             String
  applicantContact          String
  applicantEmail            String?
  applicantAddress          String?
  
  // Appointment Details
  appointmentType           AppointmentType
  purpose                   String
  preferredDate             DateTime
  preferredTime             String
  
  // Assigned Official
  assignedOfficialId        String?
  assignedOfficial          BarangayOfficial? @relation(fields: [assignedOfficialId], references: [id])
  
  // Status and Processing
  status                    AppointmentStatus @default(SCHEDULED)
  confirmedDate             DateTime?
  confirmedTime             String?
  
  // Meeting Information
  meetingNotes              String?
  outcome                   String?
  completedDate             DateTime?
  
  // Audit fields
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  createdBy                 String?
  updatedBy                 String?

  @@map("appointments")
}

// Enums
enum Gender {
  MALE
  FEMALE
  OTHER
}

enum CivilStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
  SEPARATED
}

enum HouseType {
  CONCRETE
  WOOD
  MIXED
  BAMBOO
  OTHER
}

enum OwnershipStatus {
  OWNED
  RENTED
  FREE_USE
  OTHER
}

enum DocumentType {
  BARANGAY_CLEARANCE
  BUSINESS_PERMIT
  CERTIFICATE_OF_INDIGENCY
  CERTIFICATE_OF_RESIDENCY
  CERTIFICATE_OF_EMPLOYMENT
  CERTIFICATE_OF_LOW_INCOME
}

enum DocumentStatus {
  PENDING
  IN_PROGRESS
  APPROVED
  REJECTED
  COMPLETED
}

enum ProjectCategory {
  INFRASTRUCTURE
  HEALTH
  EDUCATION
  ENVIRONMENT
  SOCIAL_SERVICES
  ECONOMIC_DEVELOPMENT
  DISASTER_PREPAREDNESS
  OTHER
}

enum ProjectStatus {
  PENDING
  ACTIVE
  ON_HOLD
  COMPLETED
  CANCELLED
}

enum PriorityLevel {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum MilestoneStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  DELAYED
}

enum OfficialPosition {
  BARANGAY_CAPTAIN
  BARANGAY_SECRETARY
  BARANGAY_TREASURER
  KAGAWAD
  SK_CHAIRPERSON
  SK_KAGAWAD
}

enum Committee {
  HEALTH
  EDUCATION
  INFRASTRUCTURE
  PEACE_AND_ORDER
  ENVIRONMENT
  SOCIAL_SERVICES
  SPORTS_AND_RECREATION
  SENIOR_CITIZEN
  WOMEN_AND_FAMILY
}

enum OfficialStatus {
  ACTIVE
  INACTIVE
  ON_LEAVE
  TERMINATED
}

enum ComplaintType {
  NOISE_COMPLAINT
  PROPERTY_DISPUTE
  HARASSMENT
  VIOLENCE
  THEFT
  VANDALISM
  PUBLIC_DISTURBANCE
  UTILITY_ISSUES
  SANITATION
  OTHER
}

enum ComplaintStatus {
  FILED
  UNDER_REVIEW
  IN_PROGRESS
  RESOLVED
  DISMISSED
  ESCALATED
}

enum SuggestionCategory {
  INFRASTRUCTURE
  SERVICES
  PROGRAMS
  POLICIES
  FACILITIES
  TECHNOLOGY
  OTHER
}

enum SuggestionStatus {
  SUBMITTED
  UNDER_REVIEW
  APPROVED
  REJECTED
  IMPLEMENTED
}

enum ImplementationStatus {
  PLANNED
  IN_PROGRESS
  COMPLETED
  ON_HOLD
  CANCELLED
}

enum IncidentType {
  PHYSICAL_INJURY
  VERBAL_ALTERCATION
  PROPERTY_DAMAGE
  THEFT
  DOMESTIC_VIOLENCE
  HARASSMENT
  LAND_DISPUTE
  NOISE_COMPLAINT
  OTHER
}

enum BlotterStatus {
  FILED
  UNDER_INVESTIGATION
  MEDIATION
  RESOLVED
  DISMISSED
}

enum AppointmentType {
  CONSULTATION
  DOCUMENT_REQUEST
  COMPLAINT_FILING
  BUSINESS_PERMIT
  CERTIFICATION_REQUEST
  MEETING
  OTHER
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  COMPLETED
  CANCELLED
  NO_SHOW
  RESCHEDULED
}
